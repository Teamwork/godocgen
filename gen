#!/bin/sh
#
# TODO: Integrate this in godocgen.go; this is a quick prototype.

set -euC

if [ "${1:-}" != "skipclone" ]; then
	if [ "${GITHUB_USER:-}" = "" -o "${GITHUB_PASS:-}" = "" ]; then
		echo "You need to set the GITHUB_USER and GITHUB_PASS environment variables."
		exit 1
	fi

	# Get list of Go projects from API that have been updated today.
	get() {
		local n=$1
		curl -s \
			-u "$GITHUB_USER:$GITHUB_PASS" \
			-H 'Accept: application/vnd.github.mercy-preview+json' \
			"https://api.github.com/organizations/4037476/repos?per_page=100&page=$n" |
			jq -cjM '.[] | [.name, .language, .pushed_at, .topics]' |
			sed 's/\]\[/]\n[/g' |
			grep "$(date +%Y-%m-%dT)" |
			grep -i '"go"' |
			grep -oE '^\["[^"]+?"' |
			tr -d '["' |
			sort |
			tr '\n' ' '

	}
	pkgs=""
	for n in 1 2 3 4; do
		pkgs="$(get $n) $pkgs"
	done

	pkgs=$(echo "$pkgs" | sed -E 's/(^ *| *$)//g')
	total=$(( $(echo "$pkgs" | tr ' ' '\n' | wc -l) - 1 ))

	# Clone/update.
	(
		mkdir -p ./_clone/src/github.com/teamwork
		cd ./_clone/src/github.com/teamwork

		i=0
		for pkg in $pkgs; do
			# Skip some stuff
			#[ $pkg = "minio" ] && continue

			i=$(($i + 1))

			printf " %-8s" "($i/$total)"
			if [ -d "$pkg" ]; then
				printf "updating %-40s\r" "$pkg"
				( cd $pkg && git pull --quiet )
			else
				printf "cloning %-40s\r" "$pkg"
				git clone --quiet "git@github.com:Teamwork/$pkg" "$pkg"
			fi
		done
		echo
	)
fi

# Generate docs.
export GOPATH="$(readlink -f .)/_clone"
rm -r ./_site/*
cp -r ./_static _site/
go run godocgen.go
